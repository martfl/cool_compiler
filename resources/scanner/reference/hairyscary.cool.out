#name resources/scanner/input/hairyscary.cool
#3 Klass "class"
#3 TypeId "Foo"
#3 Inherits "inherits"
#3 TypeId "Bazz"
#3 Lbrace "{"
#4 ObjectId "a"
#4 Colon ":"
#4 TypeId "Razz"
#4 Assign "<-"
#4 Case "case"
#4 ObjectId "self"
#4 Of "of"
#5 ObjectId "n"
#5 Colon ":"
#5 TypeId "Razz"
#5 Darrow "=>"
#5 Lparen "("
#5 New "new"
#5 TypeId "Bar"
#5 Rparen ")"
#5 Semi ";"
#6 ObjectId "n"
#6 Colon ":"
#6 TypeId "Foo"
#6 Darrow "=>"
#6 Lparen "("
#6 New "new"
#6 TypeId "Razz"
#6 Rparen ")"
#6 Semi ";"
#7 ObjectId "n"
#7 Colon ":"
#7 TypeId "Bar"
#7 Darrow "=>"
#7 ObjectId "n"
#7 Semi ";"
#8 Esac "esac"
#8 Semi ";"
#10 ObjectId "b"
#10 Colon ":"
#10 TypeId "Int"
#10 Assign "<-"
#10 ObjectId "a"
#10 Dot "."
#10 ObjectId "doh"
#10 Lparen "("
#10 Rparen ")"
#10 Plus "+"
#10 ObjectId "g"
#10 Dot "."
#10 ObjectId "doh"
#10 Lparen "("
#10 Rparen ")"
#10 Plus "+"
#10 ObjectId "doh"
#10 Lparen "("
#10 Rparen ")"
#10 Plus "+"
#10 ObjectId "printh"
#10 Lparen "("
#10 Rparen ")"
#10 Semi ";"
#12 ObjectId "doh"
#12 Lparen "("
#12 Rparen ")"
#12 Colon ":"
#12 TypeId "Int"
#12 Lbrace "{"
#12 Lparen "("
#12 Let "let"
#12 ObjectId "i"
#12 Colon ":"
#12 TypeId "Int"
#12 Assign "<-"
#12 ObjectId "h"
#12 In "in"
#12 Lbrace "{"
#12 ObjectId "h"
#12 Assign "<-"
#12 ObjectId "h"
#12 Plus "+"
#12 IntConst "2"
#12 Semi ";"
#12 ObjectId "i"
#12 Semi ";"
#12 Rbrace "}"
#12 Rparen ")"
#12 Rbrace "}"
#12 Semi ";"
#14 Rbrace "}"
#14 Semi ";"
#16 Klass "class"
#16 TypeId "Bar"
#16 Inherits "inherits"
#16 TypeId "Razz"
#16 Lbrace "{"
#18 ObjectId "c"
#18 Colon ":"
#18 TypeId "Int"
#18 Assign "<-"
#18 ObjectId "doh"
#18 Lparen "("
#18 Rparen ")"
#18 Semi ";"
#20 ObjectId "d"
#20 Colon ":"
#20 TypeId "Object"
#20 Assign "<-"
#20 ObjectId "printh"
#20 Lparen "("
#20 Rparen ")"
#20 Semi ";"
#21 Rbrace "}"
#21 Semi ";"
#24 Klass "class"
#24 TypeId "Razz"
#24 Inherits "inherits"
#24 TypeId "Foo"
#24 Lbrace "{"
#26 ObjectId "e"
#26 Colon ":"
#26 TypeId "Bar"
#26 Assign "<-"
#26 Case "case"
#26 ObjectId "self"
#26 Of "of"
#27 ObjectId "n"
#27 Colon ":"
#27 TypeId "Razz"
#27 Darrow "=>"
#27 Lparen "("
#27 New "new"
#27 TypeId "Bar"
#27 Rparen ")"
#27 Semi ";"
#28 ObjectId "n"
#28 Colon ":"
#28 TypeId "Bar"
#28 Darrow "=>"
#28 ObjectId "n"
#28 Semi ";"
#29 Esac "esac"
#29 Semi ";"
#31 ObjectId "f"
#31 Colon ":"
#31 TypeId "Int"
#31 Assign "<-"
#31 ObjectId "a"
#31 At "@"
#31 TypeId "Bazz"
#31 Dot "."
#31 ObjectId "doh"
#31 Lparen "("
#31 Rparen ")"
#31 Plus "+"
#31 ObjectId "g"
#31 Dot "."
#31 ObjectId "doh"
#31 Lparen "("
#31 Rparen ")"
#31 Plus "+"
#31 ObjectId "e"
#31 Dot "."
#31 ObjectId "doh"
#31 Lparen "("
#31 Rparen ")"
#31 Plus "+"
#31 ObjectId "doh"
#31 Lparen "("
#31 Rparen ")"
#31 Plus "+"
#31 ObjectId "printh"
#31 Lparen "("
#31 Rparen ")"
#31 Semi ";"
#33 Rbrace "}"
#33 Semi ";"
#35 Klass "class"
#35 TypeId "Bazz"
#35 Inherits "inherits"
#35 TypeId "IO"
#35 Lbrace "{"
#37 ObjectId "h"
#37 Colon ":"
#37 TypeId "Int"
#37 Assign "<-"
#37 IntConst "1"
#37 Semi ";"
#39 ObjectId "g"
#39 Colon ":"
#39 TypeId "Foo"
#39 Assign "<-"
#39 Case "case"
#39 ObjectId "self"
#39 Of "of"
#40 ObjectId "n"
#40 Colon ":"
#40 TypeId "Bazz"
#40 Darrow "=>"
#40 Lparen "("
#40 New "new"
#40 TypeId "Foo"
#40 Rparen ")"
#40 Semi ";"
#41 ObjectId "n"
#41 Colon ":"
#41 TypeId "Razz"
#41 Darrow "=>"
#41 Lparen "("
#41 New "new"
#41 TypeId "Bar"
#41 Rparen ")"
#41 Semi ";"
#42 ObjectId "n"
#42 Colon ":"
#42 TypeId "Foo"
#42 Darrow "=>"
#42 Lparen "("
#42 New "new"
#42 TypeId "Razz"
#42 Rparen ")"
#42 Semi ";"
#43 ObjectId "n"
#43 Colon ":"
#43 TypeId "Bar"
#43 Darrow "=>"
#43 ObjectId "n"
#43 Semi ";"
#44 Esac "esac"
#44 Semi ";"
#46 ObjectId "i"
#46 Colon ":"
#46 TypeId "Object"
#46 Assign "<-"
#46 ObjectId "printh"
#46 Lparen "("
#46 Rparen ")"
#46 Semi ";"
#48 ObjectId "printh"
#48 Lparen "("
#48 Rparen ")"
#48 Colon ":"
#48 TypeId "Int"
#48 Lbrace "{"
#48 Lbrace "{"
#48 ObjectId "out_int"
#48 Lparen "("
#48 ObjectId "h"
#48 Rparen ")"
#48 Semi ";"
#48 IntConst "0"
#48 Semi ";"
#48 Rbrace "}"
#48 Rbrace "}"
#48 Semi ";"
#50 ObjectId "doh"
#50 Lparen "("
#50 Rparen ")"
#50 Colon ":"
#50 TypeId "Int"
#50 Lbrace "{"
#50 Lparen "("
#50 Let "let"
#50 ObjectId "i"
#50 Colon ":"
#50 TypeId "Int"
#50 Assign "<-"
#50 ObjectId "h"
#50 In "in"
#50 Lbrace "{"
#50 ObjectId "h"
#50 Assign "<-"
#50 ObjectId "h"
#50 Plus "+"
#50 IntConst "1"
#50 Semi ";"
#50 ObjectId "i"
#50 Semi ";"
#50 Rbrace "}"
#50 Rparen ")"
#50 Rbrace "}"
#50 Semi ";"
#51 Rbrace "}"
#51 Semi ";"
#54 Klass "class"
#54 TypeId "Main"
#54 Lbrace "{"
#55 ObjectId "a"
#55 Colon ":"
#55 TypeId "Bazz"
#55 Assign "<-"
#55 New "new"
#55 TypeId "Bazz"
#55 Semi ";"
#56 ObjectId "b"
#56 Colon ":"
#56 TypeId "Foo"
#56 Assign "<-"
#56 New "new"
#56 TypeId "Foo"
#56 Semi ";"
#57 ObjectId "c"
#57 Colon ":"
#57 TypeId "Razz"
#57 Assign "<-"
#57 New "new"
#57 TypeId "Razz"
#57 Semi ";"
#58 ObjectId "d"
#58 Colon ":"
#58 TypeId "Bar"
#58 Assign "<-"
#58 New "new"
#58 TypeId "Bar"
#58 Semi ";"
#60 ObjectId "main"
#60 Lparen "("
#60 Rparen ")"
#60 Colon ":"
#60 TypeId "String"
#60 Lbrace "{"
#60 StrConst "do nothing"
#60 Rbrace "}"
#60 Semi ";"
#62 Rbrace "}"
#62 Semi ";"
