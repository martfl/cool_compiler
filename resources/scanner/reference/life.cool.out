#name resources/scanner/input/life.cool
#45 Klass "class"
#45 TypeId "Board"
#45 Inherits "inherits"
#45 TypeId "IO"
#45 Lbrace "{"
#47 ObjectId "rows"
#47 Colon ":"
#47 TypeId "Int"
#47 Semi ";"
#48 ObjectId "columns"
#48 Colon ":"
#48 TypeId "Int"
#48 Semi ";"
#49 ObjectId "board_size"
#49 Colon ":"
#49 TypeId "Int"
#49 Semi ";"
#51 ObjectId "size_of_board"
#51 Lparen "("
#51 ObjectId "initial"
#51 Colon ":"
#51 TypeId "String"
#51 Rparen ")"
#51 Colon ":"
#51 TypeId "Int"
#51 Lbrace "{"
#52 ObjectId "initial"
#52 Dot "."
#52 ObjectId "length"
#52 Lparen "("
#52 Rparen ")"
#53 Rbrace "}"
#53 Semi ";"
#55 ObjectId "board_init"
#55 Lparen "("
#55 ObjectId "start"
#55 Colon ":"
#55 TypeId "String"
#55 Rparen ")"
#55 Colon ":"
#55 TypeId "SELF_TYPE"
#55 Lbrace "{"
#56 Lparen "("
#56 Let "let"
#56 ObjectId "size"
#56 Colon ":"
#56 TypeId "Int"
#56 Assign "<-"
#56 ObjectId "size_of_board"
#56 Lparen "("
#56 ObjectId "start"
#56 Rparen ")"
#56 In "in"
#57 Lbrace "{"
#58 If "if"
#58 ObjectId "size"
#58 Eq "="
#58 IntConst "15"
#58 Then "then"
#59 Lbrace "{"
#60 ObjectId "rows"
#60 Assign "<-"
#60 IntConst "3"
#60 Semi ";"
#61 ObjectId "columns"
#61 Assign "<-"
#61 IntConst "5"
#61 Semi ";"
#62 ObjectId "board_size"
#62 Assign "<-"
#62 ObjectId "size"
#62 Semi ";"
#63 Rbrace "}"
#64 Else "else"
#64 If "if"
#64 ObjectId "size"
#64 Eq "="
#64 IntConst "16"
#64 Then "then"
#65 Lbrace "{"
#66 ObjectId "rows"
#66 Assign "<-"
#66 IntConst "4"
#66 Semi ";"
#67 ObjectId "columns"
#67 Assign "<-"
#67 IntConst "4"
#67 Semi ";"
#68 ObjectId "board_size"
#68 Assign "<-"
#68 ObjectId "size"
#68 Semi ";"
#69 Rbrace "}"
#70 Else "else"
#70 If "if"
#70 ObjectId "size"
#70 Eq "="
#70 IntConst "20"
#70 Then "then"
#71 Lbrace "{"
#72 ObjectId "rows"
#72 Assign "<-"
#72 IntConst "4"
#72 Semi ";"
#73 ObjectId "columns"
#73 Assign "<-"
#73 IntConst "5"
#73 Semi ";"
#74 ObjectId "board_size"
#74 Assign "<-"
#74 ObjectId "size"
#74 Semi ";"
#75 Rbrace "}"
#76 Else "else"
#76 If "if"
#76 ObjectId "size"
#76 Eq "="
#76 IntConst "21"
#76 Then "then"
#77 Lbrace "{"
#78 ObjectId "rows"
#78 Assign "<-"
#78 IntConst "3"
#78 Semi ";"
#79 ObjectId "columns"
#79 Assign "<-"
#79 IntConst "7"
#79 Semi ";"
#80 ObjectId "board_size"
#80 Assign "<-"
#80 ObjectId "size"
#80 Semi ";"
#81 Rbrace "}"
#82 Else "else"
#82 If "if"
#82 ObjectId "size"
#82 Eq "="
#82 IntConst "25"
#82 Then "then"
#83 Lbrace "{"
#84 ObjectId "rows"
#84 Assign "<-"
#84 IntConst "5"
#84 Semi ";"
#85 ObjectId "columns"
#85 Assign "<-"
#85 IntConst "5"
#85 Semi ";"
#86 ObjectId "board_size"
#86 Assign "<-"
#86 ObjectId "size"
#86 Semi ";"
#87 Rbrace "}"
#88 Else "else"
#88 If "if"
#88 ObjectId "size"
#88 Eq "="
#88 IntConst "28"
#88 Then "then"
#89 Lbrace "{"
#90 ObjectId "rows"
#90 Assign "<-"
#90 IntConst "7"
#90 Semi ";"
#91 ObjectId "columns"
#91 Assign "<-"
#91 IntConst "4"
#91 Semi ";"
#92 ObjectId "board_size"
#92 Assign "<-"
#92 ObjectId "size"
#92 Semi ";"
#93 Rbrace "}"
#94 Else "else"
#95 Lbrace "{"
#96 ObjectId "rows"
#96 Assign "<-"
#96 IntConst "5"
#96 Semi ";"
#97 ObjectId "columns"
#97 Assign "<-"
#97 IntConst "5"
#97 Semi ";"
#98 ObjectId "board_size"
#98 Assign "<-"
#98 ObjectId "size"
#98 Semi ";"
#99 Rbrace "}"
#100 Fi "fi"
#100 Fi "fi"
#100 Fi "fi"
#100 Fi "fi"
#100 Fi "fi"
#100 Fi "fi"
#100 Semi ";"
#101 ObjectId "self"
#101 Semi ";"
#102 Rbrace "}"
#103 Rparen ")"
#104 Rbrace "}"
#104 Semi ";"
#106 Rbrace "}"
#106 Semi ";"
#110 Klass "class"
#110 TypeId "CellularAutomaton"
#110 Inherits "inherits"
#110 TypeId "Board"
#110 Lbrace "{"
#111 ObjectId "population_map"
#111 Colon ":"
#111 TypeId "String"
#111 Semi ";"
#113 ObjectId "init"
#113 Lparen "("
#113 ObjectId "map"
#113 Colon ":"
#113 TypeId "String"
#113 Rparen ")"
#113 Colon ":"
#113 TypeId "SELF_TYPE"
#113 Lbrace "{"
#114 Lbrace "{"
#115 ObjectId "population_map"
#115 Assign "<-"
#115 ObjectId "map"
#115 Semi ";"
#116 ObjectId "board_init"
#116 Lparen "("
#116 ObjectId "map"
#116 Rparen ")"
#116 Semi ";"
#117 ObjectId "self"
#117 Semi ";"
#118 Rbrace "}"
#119 Rbrace "}"
#119 Semi ";"
#124 ObjectId "print"
#124 Lparen "("
#124 Rparen ")"
#124 Colon ":"
#124 TypeId "SELF_TYPE"
#124 Lbrace "{"
#126 Lparen "("
#126 Let "let"
#126 ObjectId "i"
#126 Colon ":"
#126 TypeId "Int"
#126 Assign "<-"
#126 IntConst "0"
#126 In "in"
#127 Lparen "("
#127 Let "let"
#127 ObjectId "num"
#127 Colon ":"
#127 TypeId "Int"
#127 Assign "<-"
#127 ObjectId "board_size"
#127 In "in"
#128 Lbrace "{"
#129 ObjectId "out_string"
#129 Lparen "("
#129 StrConst "\n"
#129 Rparen ")"
#129 Semi ";"
#130 While "while"
#130 ObjectId "i"
#130 Lt "<"
#130 ObjectId "num"
#130 Loop "loop"
#131 Lbrace "{"
#132 ObjectId "out_string"
#132 Lparen "("
#132 ObjectId "population_map"
#132 Dot "."
#132 ObjectId "substr"
#132 Lparen "("
#132 ObjectId "i"
#132 Comma ","
#132 ObjectId "columns"
#132 Rparen ")"
#132 Rparen ")"
#132 Semi ";"
#133 ObjectId "out_string"
#133 Lparen "("
#133 StrConst "\n"
#133 Rparen ")"
#133 Semi ";"
#134 ObjectId "i"
#134 Assign "<-"
#134 ObjectId "i"
#134 Plus "+"
#134 ObjectId "columns"
#134 Semi ";"
#135 Rbrace "}"
#136 Pool "pool"
#136 Semi ";"
#137 ObjectId "out_string"
#137 Lparen "("
#137 StrConst "\n"
#137 Rparen ")"
#137 Semi ";"
#138 ObjectId "self"
#138 Semi ";"
#139 Rbrace "}"
#140 Rparen ")"
#140 Rparen ")"
#141 Rbrace "}"
#141 Semi ";"
#143 ObjectId "num_cells"
#143 Lparen "("
#143 Rparen ")"
#143 Colon ":"
#143 TypeId "Int"
#143 Lbrace "{"
#144 ObjectId "population_map"
#144 Dot "."
#144 ObjectId "length"
#144 Lparen "("
#144 Rparen ")"
#145 Rbrace "}"
#145 Semi ";"
#147 ObjectId "cell"
#147 Lparen "("
#147 ObjectId "position"
#147 Colon ":"
#147 TypeId "Int"
#147 Rparen ")"
#147 Colon ":"
#147 TypeId "String"
#147 Lbrace "{"
#148 If "if"
#148 ObjectId "board_size"
#148 Minus "-"
#148 IntConst "1"
#148 Lt "<"
#148 ObjectId "position"
#148 Then "then"
#149 StrConst " "
#150 Else "else"
#151 ObjectId "population_map"
#151 Dot "."
#151 ObjectId "substr"
#151 Lparen "("
#151 ObjectId "position"
#151 Comma ","
#151 IntConst "1"
#151 Rparen ")"
#152 Fi "fi"
#153 Rbrace "}"
#153 Semi ";"
#155 ObjectId "north"
#155 Lparen "("
#155 ObjectId "position"
#155 Colon ":"
#155 TypeId "Int"
#155 Rparen ")"
#155 Colon ":"
#155 TypeId "String"
#155 Lbrace "{"
#156 If "if"
#156 Lparen "("
#156 ObjectId "position"
#156 Minus "-"
#156 ObjectId "columns"
#156 Rparen ")"
#156 Lt "<"
#156 IntConst "0"
#156 Then "then"
#157 StrConst " "
#158 Else "else"
#159 ObjectId "cell"
#159 Lparen "("
#159 ObjectId "position"
#159 Minus "-"
#159 ObjectId "columns"
#159 Rparen ")"
#160 Fi "fi"
#161 Rbrace "}"
#161 Semi ";"
#163 ObjectId "south"
#163 Lparen "("
#163 ObjectId "position"
#163 Colon ":"
#163 TypeId "Int"
#163 Rparen ")"
#163 Colon ":"
#163 TypeId "String"
#163 Lbrace "{"
#164 If "if"
#164 ObjectId "board_size"
#164 Lt "<"
#164 Lparen "("
#164 ObjectId "position"
#164 Plus "+"
#164 ObjectId "columns"
#164 Rparen ")"
#164 Then "then"
#165 StrConst " "
#166 Else "else"
#167 ObjectId "cell"
#167 Lparen "("
#167 ObjectId "position"
#167 Plus "+"
#167 ObjectId "columns"
#167 Rparen ")"
#168 Fi "fi"
#169 Rbrace "}"
#169 Semi ";"
#171 ObjectId "east"
#171 Lparen "("
#171 ObjectId "position"
#171 Colon ":"
#171 TypeId "Int"
#171 Rparen ")"
#171 Colon ":"
#171 TypeId "String"
#171 Lbrace "{"
#172 If "if"
#172 Lparen "("
#172 Lparen "("
#172 Lparen "("
#172 ObjectId "position"
#172 Plus "+"
#172 IntConst "1"
#172 Rparen ")"
#172 Div "/"
#172 ObjectId "columns"
#172 Rparen ")"
#172 Mult "*"
#172 ObjectId "columns"
#172 Rparen ")"
#172 Eq "="
#172 Lparen "("
#172 ObjectId "position"
#172 Plus "+"
#172 IntConst "1"
#172 Rparen ")"
#172 Then "then"
#173 StrConst " "
#174 Else "else"
#175 ObjectId "cell"
#175 Lparen "("
#175 ObjectId "position"
#175 Plus "+"
#175 IntConst "1"
#175 Rparen ")"
#176 Fi "fi"
#177 Rbrace "}"
#177 Semi ";"
#179 ObjectId "west"
#179 Lparen "("
#179 ObjectId "position"
#179 Colon ":"
#179 TypeId "Int"
#179 Rparen ")"
#179 Colon ":"
#179 TypeId "String"
#179 Lbrace "{"
#180 If "if"
#180 ObjectId "position"
#180 Eq "="
#180 IntConst "0"
#180 Then "then"
#181 StrConst " "
#182 Else "else"
#183 If "if"
#183 Lparen "("
#183 Lparen "("
#183 ObjectId "position"
#183 Div "/"
#183 ObjectId "columns"
#183 Rparen ")"
#183 Mult "*"
#183 ObjectId "columns"
#183 Rparen ")"
#183 Eq "="
#183 ObjectId "position"
#183 Then "then"
#184 StrConst " "
#185 Else "else"
#186 ObjectId "cell"
#186 Lparen "("
#186 ObjectId "position"
#186 Minus "-"
#186 IntConst "1"
#186 Rparen ")"
#187 Fi "fi"
#187 Fi "fi"
#188 Rbrace "}"
#188 Semi ";"
#190 ObjectId "northwest"
#190 Lparen "("
#190 ObjectId "position"
#190 Colon ":"
#190 TypeId "Int"
#190 Rparen ")"
#190 Colon ":"
#190 TypeId "String"
#190 Lbrace "{"
#191 If "if"
#191 Lparen "("
#191 ObjectId "position"
#191 Minus "-"
#191 ObjectId "columns"
#191 Rparen ")"
#191 Lt "<"
#191 IntConst "0"
#191 Then "then"
#192 StrConst " "
#193 Else "else"
#193 If "if"
#193 Lparen "("
#193 Lparen "("
#193 ObjectId "position"
#193 Div "/"
#193 ObjectId "columns"
#193 Rparen ")"
#193 Mult "*"
#193 ObjectId "columns"
#193 Rparen ")"
#193 Eq "="
#193 ObjectId "position"
#193 Then "then"
#194 StrConst " "
#195 Else "else"
#196 ObjectId "north"
#196 Lparen "("
#196 ObjectId "position"
#196 Minus "-"
#196 IntConst "1"
#196 Rparen ")"
#197 Fi "fi"
#197 Fi "fi"
#198 Rbrace "}"
#198 Semi ";"
#200 ObjectId "northeast"
#200 Lparen "("
#200 ObjectId "position"
#200 Colon ":"
#200 TypeId "Int"
#200 Rparen ")"
#200 Colon ":"
#200 TypeId "String"
#200 Lbrace "{"
#201 If "if"
#201 Lparen "("
#201 ObjectId "position"
#201 Minus "-"
#201 ObjectId "columns"
#201 Rparen ")"
#201 Lt "<"
#201 IntConst "0"
#201 Then "then"
#202 StrConst " "
#203 Else "else"
#203 If "if"
#203 Lparen "("
#203 Lparen "("
#203 Lparen "("
#203 ObjectId "position"
#203 Plus "+"
#203 IntConst "1"
#203 Rparen ")"
#203 Div "/"
#203 ObjectId "columns"
#203 Rparen ")"
#203 Mult "*"
#203 ObjectId "columns"
#203 Rparen ")"
#203 Eq "="
#203 Lparen "("
#203 ObjectId "position"
#203 Plus "+"
#203 IntConst "1"
#203 Rparen ")"
#203 Then "then"
#204 StrConst " "
#205 Else "else"
#206 ObjectId "north"
#206 Lparen "("
#206 ObjectId "position"
#206 Plus "+"
#206 IntConst "1"
#206 Rparen ")"
#207 Fi "fi"
#207 Fi "fi"
#208 Rbrace "}"
#208 Semi ";"
#210 ObjectId "southeast"
#210 Lparen "("
#210 ObjectId "position"
#210 Colon ":"
#210 TypeId "Int"
#210 Rparen ")"
#210 Colon ":"
#210 TypeId "String"
#210 Lbrace "{"
#211 If "if"
#211 ObjectId "board_size"
#211 Lt "<"
#211 Lparen "("
#211 ObjectId "position"
#211 Plus "+"
#211 ObjectId "columns"
#211 Rparen ")"
#211 Then "then"
#212 StrConst " "
#213 Else "else"
#213 If "if"
#213 Lparen "("
#213 Lparen "("
#213 Lparen "("
#213 ObjectId "position"
#213 Plus "+"
#213 IntConst "1"
#213 Rparen ")"
#213 Div "/"
#213 ObjectId "columns"
#213 Rparen ")"
#213 Mult "*"
#213 ObjectId "columns"
#213 Rparen ")"
#213 Eq "="
#213 Lparen "("
#213 ObjectId "position"
#213 Plus "+"
#213 IntConst "1"
#213 Rparen ")"
#213 Then "then"
#214 StrConst " "
#215 Else "else"
#216 ObjectId "south"
#216 Lparen "("
#216 ObjectId "position"
#216 Plus "+"
#216 IntConst "1"
#216 Rparen ")"
#217 Fi "fi"
#217 Fi "fi"
#218 Rbrace "}"
#218 Semi ";"
#220 ObjectId "southwest"
#220 Lparen "("
#220 ObjectId "position"
#220 Colon ":"
#220 TypeId "Int"
#220 Rparen ")"
#220 Colon ":"
#220 TypeId "String"
#220 Lbrace "{"
#221 If "if"
#221 ObjectId "board_size"
#221 Lt "<"
#221 Lparen "("
#221 ObjectId "position"
#221 Plus "+"
#221 ObjectId "columns"
#221 Rparen ")"
#221 Then "then"
#222 StrConst " "
#223 Else "else"
#223 If "if"
#223 Lparen "("
#223 Lparen "("
#223 ObjectId "position"
#223 Div "/"
#223 ObjectId "columns"
#223 Rparen ")"
#223 Mult "*"
#223 ObjectId "columns"
#223 Rparen ")"
#223 Eq "="
#223 ObjectId "position"
#223 Then "then"
#224 StrConst " "
#225 Else "else"
#226 ObjectId "south"
#226 Lparen "("
#226 ObjectId "position"
#226 Minus "-"
#226 IntConst "1"
#226 Rparen ")"
#227 Fi "fi"
#227 Fi "fi"
#228 Rbrace "}"
#228 Semi ";"
#230 ObjectId "neighbors"
#230 Lparen "("
#230 ObjectId "position"
#230 Colon ":"
#230 TypeId "Int"
#230 Rparen ")"
#230 Colon ":"
#230 TypeId "Int"
#230 Lbrace "{"
#231 Lbrace "{"
#232 If "if"
#232 ObjectId "north"
#232 Lparen "("
#232 ObjectId "position"
#232 Rparen ")"
#232 Eq "="
#232 StrConst "X"
#232 Then "then"
#232 IntConst "1"
#232 Else "else"
#232 IntConst "0"
#232 Fi "fi"
#233 Plus "+"
#233 If "if"
#233 ObjectId "south"
#233 Lparen "("
#233 ObjectId "position"
#233 Rparen ")"
#233 Eq "="
#233 StrConst "X"
#233 Then "then"
#233 IntConst "1"
#233 Else "else"
#233 IntConst "0"
#233 Fi "fi"
#234 Plus "+"
#234 If "if"
#234 ObjectId "east"
#234 Lparen "("
#234 ObjectId "position"
#234 Rparen ")"
#234 Eq "="
#234 StrConst "X"
#234 Then "then"
#234 IntConst "1"
#234 Else "else"
#234 IntConst "0"
#234 Fi "fi"
#235 Plus "+"
#235 If "if"
#235 ObjectId "west"
#235 Lparen "("
#235 ObjectId "position"
#235 Rparen ")"
#235 Eq "="
#235 StrConst "X"
#235 Then "then"
#235 IntConst "1"
#235 Else "else"
#235 IntConst "0"
#235 Fi "fi"
#236 Plus "+"
#236 If "if"
#236 ObjectId "northeast"
#236 Lparen "("
#236 ObjectId "position"
#236 Rparen ")"
#236 Eq "="
#236 StrConst "X"
#236 Then "then"
#236 IntConst "1"
#236 Else "else"
#236 IntConst "0"
#236 Fi "fi"
#237 Plus "+"
#237 If "if"
#237 ObjectId "northwest"
#237 Lparen "("
#237 ObjectId "position"
#237 Rparen ")"
#237 Eq "="
#237 StrConst "X"
#237 Then "then"
#237 IntConst "1"
#237 Else "else"
#237 IntConst "0"
#237 Fi "fi"
#238 Plus "+"
#238 If "if"
#238 ObjectId "southeast"
#238 Lparen "("
#238 ObjectId "position"
#238 Rparen ")"
#238 Eq "="
#238 StrConst "X"
#238 Then "then"
#238 IntConst "1"
#238 Else "else"
#238 IntConst "0"
#238 Fi "fi"
#239 Plus "+"
#239 If "if"
#239 ObjectId "southwest"
#239 Lparen "("
#239 ObjectId "position"
#239 Rparen ")"
#239 Eq "="
#239 StrConst "X"
#239 Then "then"
#239 IntConst "1"
#239 Else "else"
#239 IntConst "0"
#239 Fi "fi"
#239 Semi ";"
#240 Rbrace "}"
#241 Rbrace "}"
#241 Semi ";"
#247 ObjectId "cell_at_next_evolution"
#247 Lparen "("
#247 ObjectId "position"
#247 Colon ":"
#247 TypeId "Int"
#247 Rparen ")"
#247 Colon ":"
#247 TypeId "String"
#247 Lbrace "{"
#249 If "if"
#249 ObjectId "neighbors"
#249 Lparen "("
#249 ObjectId "position"
#249 Rparen ")"
#249 Eq "="
#249 IntConst "3"
#249 Then "then"
#250 StrConst "X"
#251 Else "else"
#252 If "if"
#252 ObjectId "neighbors"
#252 Lparen "("
#252 ObjectId "position"
#252 Rparen ")"
#252 Eq "="
#252 IntConst "2"
#252 Then "then"
#253 If "if"
#253 ObjectId "cell"
#253 Lparen "("
#253 ObjectId "position"
#253 Rparen ")"
#253 Eq "="
#253 StrConst "X"
#253 Then "then"
#254 StrConst "X"
#255 Else "else"
#256 StrConst "-"
#257 Fi "fi"
#258 Else "else"
#259 StrConst "-"
#260 Fi "fi"
#260 Fi "fi"
#261 Rbrace "}"
#261 Semi ";"
#264 ObjectId "evolve"
#264 Lparen "("
#264 Rparen ")"
#264 Colon ":"
#264 TypeId "SELF_TYPE"
#264 Lbrace "{"
#265 Lparen "("
#265 Let "let"
#265 ObjectId "position"
#265 Colon ":"
#265 TypeId "Int"
#265 Assign "<-"
#265 IntConst "0"
#265 In "in"
#266 Lparen "("
#266 Let "let"
#266 ObjectId "num"
#266 Colon ":"
#266 TypeId "Int"
#266 Assign "<-"
#266 ObjectId "num_cells"
#266 Lparen "("
#266 Rparen ")"
#266 In "in"
#267 Lparen "("
#267 Let "let"
#267 ObjectId "temp"
#267 Colon ":"
#267 TypeId "String"
#267 In "in"
#268 Lbrace "{"
#269 While "while"
#269 ObjectId "position"
#269 Lt "<"
#269 ObjectId "num"
#269 Loop "loop"
#270 Lbrace "{"
#271 ObjectId "temp"
#271 Assign "<-"
#271 ObjectId "temp"
#271 Dot "."
#271 ObjectId "concat"
#271 Lparen "("
#271 ObjectId "cell_at_next_evolution"
#271 Lparen "("
#271 ObjectId "position"
#271 Rparen ")"
#271 Rparen ")"
#271 Semi ";"
#272 ObjectId "position"
#272 Assign "<-"
#272 ObjectId "position"
#272 Plus "+"
#272 IntConst "1"
#272 Semi ";"
#273 Rbrace "}"
#274 Pool "pool"
#274 Semi ";"
#275 ObjectId "population_map"
#275 Assign "<-"
#275 ObjectId "temp"
#275 Semi ";"
#276 ObjectId "self"
#276 Semi ";"
#277 Rbrace "}"
#278 Rparen ")"
#278 Rparen ")"
#278 Rparen ")"
#279 Rbrace "}"
#279 Semi ";"
#284 ObjectId "option"
#284 Lparen "("
#284 Rparen ")"
#284 Colon ":"
#284 TypeId "String"
#284 Lbrace "{"
#285 Lbrace "{"
#286 Lparen "("
#286 Let "let"
#286 ObjectId "num"
#286 Colon ":"
#286 TypeId "Int"
#286 In "in"
#287 Lbrace "{"
#288 ObjectId "out_string"
#288 Lparen "("
#288 StrConst "\nPlease chose a number:\n"
#288 Rparen ")"
#288 Semi ";"
#289 ObjectId "out_string"
#289 Lparen "("
#289 StrConst "\t1: A cross\n"
#289 Rparen ")"
#289 Semi ";"
#290 ObjectId "out_string"
#290 Lparen "("
#290 StrConst "\t2: A slash from the upper left to lower right\n"
#290 Rparen ")"
#290 Semi ";"
#291 ObjectId "out_string"
#291 Lparen "("
#291 StrConst "\t3: A slash from the upper right to lower left\n"
#291 Rparen ")"
#291 Semi ";"
#292 ObjectId "out_string"
#292 Lparen "("
#292 StrConst "\t4: An X\n"
#292 Rparen ")"
#292 Semi ";"
#293 ObjectId "out_string"
#293 Lparen "("
#293 StrConst "\t5: A greater than sign \n"
#293 Rparen ")"
#293 Semi ";"
#294 ObjectId "out_string"
#294 Lparen "("
#294 StrConst "\t6: A less than sign\n"
#294 Rparen ")"
#294 Semi ";"
#295 ObjectId "out_string"
#295 Lparen "("
#295 StrConst "\t7: Two greater than signs\n"
#295 Rparen ")"
#295 Semi ";"
#296 ObjectId "out_string"
#296 Lparen "("
#296 StrConst "\t8: Two less than signs\n"
#296 Rparen ")"
#296 Semi ";"
#297 ObjectId "out_string"
#297 Lparen "("
#297 StrConst "\t9: A 'V'\n"
#297 Rparen ")"
#297 Semi ";"
#298 ObjectId "out_string"
#298 Lparen "("
#298 StrConst "\t10: An inverse 'V'\n"
#298 Rparen ")"
#298 Semi ";"
#299 ObjectId "out_string"
#299 Lparen "("
#299 StrConst "\t11: Numbers 9 and 10 combined\n"
#299 Rparen ")"
#299 Semi ";"
#300 ObjectId "out_string"
#300 Lparen "("
#300 StrConst "\t12: A full grid\n"
#300 Rparen ")"
#300 Semi ";"
#301 ObjectId "out_string"
#301 Lparen "("
#301 StrConst "\t13: A 'T'\n"
#301 Rparen ")"
#301 Semi ";"
#302 ObjectId "out_string"
#302 Lparen "("
#302 StrConst "\t14: A plus '+'\n"
#302 Rparen ")"
#302 Semi ";"
#303 ObjectId "out_string"
#303 Lparen "("
#303 StrConst "\t15: A 'W'\n"
#303 Rparen ")"
#303 Semi ";"
#304 ObjectId "out_string"
#304 Lparen "("
#304 StrConst "\t16: An 'M'\n"
#304 Rparen ")"
#304 Semi ";"
#305 ObjectId "out_string"
#305 Lparen "("
#305 StrConst "\t17: An 'E'\n"
#305 Rparen ")"
#305 Semi ";"
#306 ObjectId "out_string"
#306 Lparen "("
#306 StrConst "\t18: A '3'\n"
#306 Rparen ")"
#306 Semi ";"
#307 ObjectId "out_string"
#307 Lparen "("
#307 StrConst "\t19: An 'O'\n"
#307 Rparen ")"
#307 Semi ";"
#308 ObjectId "out_string"
#308 Lparen "("
#308 StrConst "\t20: An '8'\n"
#308 Rparen ")"
#308 Semi ";"
#309 ObjectId "out_string"
#309 Lparen "("
#309 StrConst "\t21: An 'S'\n"
#309 Rparen ")"
#309 Semi ";"
#310 ObjectId "out_string"
#310 Lparen "("
#310 StrConst "Your choice => "
#310 Rparen ")"
#310 Semi ";"
#311 ObjectId "num"
#311 Assign "<-"
#311 ObjectId "in_int"
#311 Lparen "("
#311 Rparen ")"
#311 Semi ";"
#312 ObjectId "out_string"
#312 Lparen "("
#312 StrConst "\n"
#312 Rparen ")"
#312 Semi ";"
#313 If "if"
#313 ObjectId "num"
#313 Eq "="
#313 IntConst "1"
#313 Then "then"
#314 StrConst " XX  XXXX XXXX  XX  "
#315 Else "else"
#315 If "if"
#315 ObjectId "num"
#315 Eq "="
#315 IntConst "2"
#315 Then "then"
#316 StrConst "    X   X   X   X   X    "
#317 Else "else"
#317 If "if"
#317 ObjectId "num"
#317 Eq "="
#317 IntConst "3"
#317 Then "then"
#318 StrConst "X     X     X     X     X"
#319 Else "else"
#319 If "if"
#319 ObjectId "num"
#319 Eq "="
#319 IntConst "4"
#319 Then "then"
#320 StrConst "X   X X X   X   X X X   X"
#321 Else "else"
#321 If "if"
#321 ObjectId "num"
#321 Eq "="
#321 IntConst "5"
#321 Then "then"
#322 StrConst "X     X     X   X   X    "
#323 Else "else"
#323 If "if"
#323 ObjectId "num"
#323 Eq "="
#323 IntConst "6"
#323 Then "then"
#324 StrConst "    X   X   X     X     X"
#325 Else "else"
#325 If "if"
#325 ObjectId "num"
#325 Eq "="
#325 IntConst "7"
#325 Then "then"
#326 StrConst "X  X  X  XX  X      "
#327 Else "else"
#327 If "if"
#327 ObjectId "num"
#327 Eq "="
#327 IntConst "8"
#327 Then "then"
#328 StrConst " X  XX  X  X  X     "
#329 Else "else"
#329 If "if"
#329 ObjectId "num"
#329 Eq "="
#329 IntConst "9"
#329 Then "then"
#330 StrConst "X   X X X   X  "
#331 Else "else"
#331 If "if"
#331 ObjectId "num"
#331 Eq "="
#331 IntConst "10"
#331 Then "then"
#332 StrConst "  X   X X X   X"
#333 Else "else"
#333 If "if"
#333 ObjectId "num"
#333 Eq "="
#333 IntConst "11"
#333 Then "then"
#334 StrConst "X X X X X X X X"
#335 Else "else"
#335 If "if"
#335 ObjectId "num"
#335 Eq "="
#335 IntConst "12"
#335 Then "then"
#336 StrConst "XXXXXXXXXXXXXXXXXXXXXXXXX"
#337 Else "else"
#337 If "if"
#337 ObjectId "num"
#337 Eq "="
#337 IntConst "13"
#337 Then "then"
#338 StrConst "XXXXX  X    X    X    X  "
#339 Else "else"
#339 If "if"
#339 ObjectId "num"
#339 Eq "="
#339 IntConst "14"
#339 Then "then"
#340 StrConst "  X    X  XXXXX  X    X  "
#341 Else "else"
#341 If "if"
#341 ObjectId "num"
#341 Eq "="
#341 IntConst "15"
#341 Then "then"
#342 StrConst "X     X X X X   X X  "
#343 Else "else"
#343 If "if"
#343 ObjectId "num"
#343 Eq "="
#343 IntConst "16"
#343 Then "then"
#344 StrConst "  X X   X X X X     X"
#345 Else "else"
#345 If "if"
#345 ObjectId "num"
#345 Eq "="
#345 IntConst "17"
#345 Then "then"
#346 StrConst "XXXXX   X   XXXXX   X   XXXX"
#347 Else "else"
#347 If "if"
#347 ObjectId "num"
#347 Eq "="
#347 IntConst "18"
#347 Then "then"
#348 StrConst "XXX    X   X  X    X   XXXX "
#349 Else "else"
#349 If "if"
#349 ObjectId "num"
#349 Eq "="
#349 IntConst "19"
#349 Then "then"
#350 StrConst " XX X  XX  X XX "
#351 Else "else"
#351 If "if"
#351 ObjectId "num"
#351 Eq "="
#351 IntConst "20"
#351 Then "then"
#352 StrConst " XX X  XX  X XX X  XX  X XX "
#353 Else "else"
#353 If "if"
#353 ObjectId "num"
#353 Eq "="
#353 IntConst "21"
#353 Then "then"
#354 StrConst " XXXX   X    XX    X   XXXX "
#355 Else "else"
#356 StrConst "                         "
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Fi "fi"
#357 Semi ";"
#358 Rbrace "}"
#359 Rparen ")"
#359 Semi ";"
#360 Rbrace "}"
#361 Rbrace "}"
#361 Semi ";"
#366 ObjectId "prompt"
#366 Lparen "("
#366 Rparen ")"
#366 Colon ":"
#366 TypeId "Bool"
#366 Lbrace "{"
#367 Lbrace "{"
#368 Lparen "("
#368 Let "let"
#368 ObjectId "ans"
#368 Colon ":"
#368 TypeId "String"
#368 In "in"
#369 Lbrace "{"
#370 ObjectId "out_string"
#370 Lparen "("
#370 StrConst "Would you like to continue with the next generation? \n"
#370 Rparen ")"
#370 Semi ";"
#371 ObjectId "out_string"
#371 Lparen "("
#371 StrConst "Please use lowercase y or n for your answer [y]: "
#371 Rparen ")"
#371 Semi ";"
#372 ObjectId "ans"
#372 Assign "<-"
#372 ObjectId "in_string"
#372 Lparen "("
#372 Rparen ")"
#372 Semi ";"
#373 ObjectId "out_string"
#373 Lparen "("
#373 StrConst "\n"
#373 Rparen ")"
#373 Semi ";"
#374 If "if"
#374 ObjectId "ans"
#374 Eq "="
#374 StrConst "n"
#374 Then "then"
#375 BoolConst "false"
#376 Else "else"
#377 BoolConst "true"
#378 Fi "fi"
#378 Semi ";"
#379 Rbrace "}"
#380 Rparen ")"
#380 Semi ";"
#381 Rbrace "}"
#382 Rbrace "}"
#382 Semi ";"
#385 ObjectId "prompt2"
#385 Lparen "("
#385 Rparen ")"
#385 Colon ":"
#385 TypeId "Bool"
#385 Lbrace "{"
#386 Lparen "("
#386 Let "let"
#386 ObjectId "ans"
#386 Colon ":"
#386 TypeId "String"
#386 In "in"
#387 Lbrace "{"
#388 ObjectId "out_string"
#388 Lparen "("
#388 StrConst "\n\n"
#388 Rparen ")"
#388 Semi ";"
#389 ObjectId "out_string"
#389 Lparen "("
#389 StrConst "Would you like to choose a background pattern? \n"
#389 Rparen ")"
#389 Semi ";"
#390 ObjectId "out_string"
#390 Lparen "("
#390 StrConst "Please use lowercase y or n for your answer [n]: "
#390 Rparen ")"
#390 Semi ";"
#391 ObjectId "ans"
#391 Assign "<-"
#391 ObjectId "in_string"
#391 Lparen "("
#391 Rparen ")"
#391 Semi ";"
#392 If "if"
#392 ObjectId "ans"
#392 Eq "="
#392 StrConst "y"
#392 Then "then"
#393 BoolConst "true"
#394 Else "else"
#395 BoolConst "false"
#396 Fi "fi"
#396 Semi ";"
#397 Rbrace "}"
#398 Rparen ")"
#399 Rbrace "}"
#399 Semi ";"
#402 Rbrace "}"
#402 Semi ";"
#404 Klass "class"
#404 TypeId "Main"
#404 Inherits "inherits"
#404 TypeId "CellularAutomaton"
#404 Lbrace "{"
#405 ObjectId "cells"
#405 Colon ":"
#405 TypeId "CellularAutomaton"
#405 Semi ";"
#407 ObjectId "main"
#407 Lparen "("
#407 Rparen ")"
#407 Colon ":"
#407 TypeId "SELF_TYPE"
#407 Lbrace "{"
#408 Lbrace "{"
#409 Lparen "("
#409 Let "let"
#409 ObjectId "continue"
#409 Colon ":"
#409 TypeId "Bool"
#409 In "in"
#410 Lparen "("
#410 Let "let"
#410 ObjectId "choice"
#410 Colon ":"
#410 TypeId "String"
#410 In "in"
#411 Lbrace "{"
#412 ObjectId "out_string"
#412 Lparen "("
#412 StrConst "Welcome to the Game of Life.\n"
#412 Rparen ")"
#412 Semi ";"
#413 ObjectId "out_string"
#413 Lparen "("
#413 StrConst "There are many initial states to choose from. \n"
#413 Rparen ")"
#413 Semi ";"
#414 While "while"
#414 ObjectId "prompt2"
#414 Lparen "("
#414 Rparen ")"
#414 Loop "loop"
#415 Lbrace "{"
#416 ObjectId "continue"
#416 Assign "<-"
#416 BoolConst "true"
#416 Semi ";"
#417 ObjectId "choice"
#417 Assign "<-"
#417 ObjectId "option"
#417 Lparen "("
#417 Rparen ")"
#417 Semi ";"
#418 ObjectId "cells"
#418 Assign "<-"
#418 Lparen "("
#418 New "new"
#418 TypeId "CellularAutomaton"
#418 Rparen ")"
#418 Dot "."
#418 ObjectId "init"
#418 Lparen "("
#418 ObjectId "choice"
#418 Rparen ")"
#418 Semi ";"
#419 ObjectId "cells"
#419 Dot "."
#419 ObjectId "print"
#419 Lparen "("
#419 Rparen ")"
#419 Semi ";"
#420 While "while"
#420 ObjectId "continue"
#420 Loop "loop"
#421 If "if"
#421 ObjectId "prompt"
#421 Lparen "("
#421 Rparen ")"
#421 Then "then"
#422 Lbrace "{"
#423 ObjectId "cells"
#423 Dot "."
#423 ObjectId "evolve"
#423 Lparen "("
#423 Rparen ")"
#423 Semi ";"
#424 ObjectId "cells"
#424 Dot "."
#424 ObjectId "print"
#424 Lparen "("
#424 Rparen ")"
#424 Semi ";"
#425 Rbrace "}"
#426 Else "else"
#427 ObjectId "continue"
#427 Assign "<-"
#427 BoolConst "false"
#428 Fi "fi"
#429 Pool "pool"
#429 Semi ";"
#430 Rbrace "}"
#431 Pool "pool"
#431 Semi ";"
#432 ObjectId "self"
#432 Semi ";"
#433 Rbrace "}"
#433 Rparen ")"
#433 Rparen ")"
#433 Semi ";"
#433 Rbrace "}"
#434 Rbrace "}"
#434 Semi ";"
#435 Rbrace "}"
#435 Semi ";"
