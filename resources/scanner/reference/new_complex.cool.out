#name resources/scanner/input/new_complex.cool
#1 Klass "class"
#1 TypeId "Main"
#1 Inherits "inherits"
#1 TypeId "IO"
#1 Lbrace "{"
#2 ObjectId "main"
#2 Lparen "("
#2 Rparen ")"
#2 Colon ":"
#2 TypeId "SELF_TYPE"
#2 Lbrace "{"
#3 Lparen "("
#3 Let "let"
#3 ObjectId "c"
#3 Colon ":"
#3 TypeId "Complex"
#3 Assign "<-"
#3 Lparen "("
#3 New "new"
#3 TypeId "Complex"
#3 Rparen ")"
#3 Dot "."
#3 ObjectId "init"
#3 Lparen "("
#3 IntConst "1"
#3 Comma ","
#3 IntConst "1"
#3 Rparen ")"
#3 In "in"
#4 Lbrace "{"
#6 If "if"
#6 ObjectId "c"
#6 Dot "."
#6 ObjectId "reflect_X"
#6 Lparen "("
#6 Rparen ")"
#6 Eq "="
#6 ObjectId "c"
#6 Dot "."
#6 ObjectId "reflect_0"
#6 Lparen "("
#6 Rparen ")"
#7 Then "then"
#7 ObjectId "out_string"
#7 Lparen "("
#7 StrConst "=)\n"
#7 Rparen ")"
#8 Else "else"
#8 ObjectId "out_string"
#8 Lparen "("
#8 StrConst "=(\n"
#8 Rparen ")"
#9 Fi "fi"
#9 Semi ";"
#11 If "if"
#11 ObjectId "c"
#11 Dot "."
#11 ObjectId "reflect_X"
#11 Lparen "("
#11 Rparen ")"
#11 Dot "."
#11 ObjectId "reflect_Y"
#11 Lparen "("
#11 Rparen ")"
#11 Dot "."
#11 ObjectId "equal"
#11 Lparen "("
#11 ObjectId "c"
#11 Dot "."
#11 ObjectId "reflect_0"
#11 Lparen "("
#11 Rparen ")"
#11 Rparen ")"
#12 Then "then"
#12 ObjectId "out_string"
#12 Lparen "("
#12 StrConst "=)\n"
#12 Rparen ")"
#13 Else "else"
#13 ObjectId "out_string"
#13 Lparen "("
#13 StrConst "=(\n"
#13 Rparen ")"
#14 Fi "fi"
#14 Semi ";"
#15 Rbrace "}"
#16 Rparen ")"
#17 Rbrace "}"
#17 Semi ";"
#18 Rbrace "}"
#18 Semi ";"
#20 Klass "class"
#20 TypeId "Complex"
#20 Inherits "inherits"
#20 TypeId "IO"
#20 Lbrace "{"
#21 ObjectId "x"
#21 Colon ":"
#21 TypeId "Int"
#21 Semi ";"
#22 ObjectId "y"
#22 Colon ":"
#22 TypeId "Int"
#22 Semi ";"
#24 ObjectId "init"
#24 Lparen "("
#24 ObjectId "a"
#24 Colon ":"
#24 TypeId "Int"
#24 Comma ","
#24 ObjectId "b"
#24 Colon ":"
#24 TypeId "Int"
#24 Rparen ")"
#24 Colon ":"
#24 TypeId "Complex"
#24 Lbrace "{"
#25 Lbrace "{"
#26 ObjectId "x"
#26 Eq "="
#26 ObjectId "a"
#26 Semi ";"
#27 ObjectId "y"
#27 Eq "="
#27 ObjectId "b"
#27 Semi ";"
#28 ObjectId "self"
#28 Semi ";"
#29 Rbrace "}"
#30 Rbrace "}"
#30 Semi ";"
#32 ObjectId "print"
#32 Lparen "("
#32 Rparen ")"
#32 Colon ":"
#32 TypeId "Object"
#32 Lbrace "{"
#33 If "if"
#33 ObjectId "y"
#33 Eq "="
#33 IntConst "0"
#34 Then "then"
#34 ObjectId "out_int"
#34 Lparen "("
#34 ObjectId "x"
#34 Rparen ")"
#35 Else "else"
#35 ObjectId "out_int"
#35 Lparen "("
#35 ObjectId "x"
#35 Rparen ")"
#35 Dot "."
#35 ObjectId "out_string"
#35 Lparen "("
#35 StrConst "+"
#35 Rparen ")"
#35 Dot "."
#35 ObjectId "out_int"
#35 Lparen "("
#35 ObjectId "y"
#35 Rparen ")"
#35 Dot "."
#35 ObjectId "out_string"
#35 Lparen "("
#35 StrConst "I"
#35 Rparen ")"
#36 Fi "fi"
#37 Rbrace "}"
#37 Semi ";"
#39 ObjectId "reflect_0"
#39 Lparen "("
#39 Rparen ")"
#39 Colon ":"
#39 TypeId "Complex"
#39 Lbrace "{"
#40 Lbrace "{"
#41 ObjectId "x"
#41 Eq "="
#41 Neg "~"
#41 ObjectId "x"
#41 Semi ";"
#42 ObjectId "y"
#42 Eq "="
#42 Neg "~"
#42 ObjectId "y"
#42 Semi ";"
#43 ObjectId "self"
#43 Semi ";"
#44 Rbrace "}"
#45 Rbrace "}"
#45 Semi ";"
#47 ObjectId "reflect_X"
#47 Lparen "("
#47 Rparen ")"
#47 Colon ":"
#47 TypeId "Complex"
#47 Lbrace "{"
#48 Lbrace "{"
#49 ObjectId "y"
#49 Eq "="
#49 Neg "~"
#49 ObjectId "y"
#49 Semi ";"
#50 ObjectId "self"
#50 Semi ";"
#51 Rbrace "}"
#52 Rbrace "}"
#52 Semi ";"
#54 ObjectId "reflect_Y"
#54 Lparen "("
#54 Rparen ")"
#54 Colon ":"
#54 TypeId "Complex"
#54 Lbrace "{"
#55 Lbrace "{"
#56 ObjectId "x"
#56 Eq "="
#56 Neg "~"
#56 ObjectId "x"
#56 Semi ";"
#57 ObjectId "self"
#57 Semi ";"
#58 Rbrace "}"
#59 Rbrace "}"
#59 Semi ";"
#61 ObjectId "equal"
#61 Lparen "("
#61 ObjectId "d"
#61 Colon ":"
#61 TypeId "Complex"
#61 Rparen ")"
#61 Colon ":"
#61 TypeId "Bool"
#61 Lbrace "{"
#62 If "if"
#62 ObjectId "x"
#62 Eq "="
#62 ObjectId "d"
#62 Dot "."
#62 ObjectId "x_value"
#62 Lparen "("
#62 Rparen ")"
#63 Then "then"
#64 If "if"
#64 ObjectId "y"
#64 Eq "="
#64 ObjectId "d"
#64 Dot "."
#64 ObjectId "y_value"
#64 Lparen "("
#64 Rparen ")"
#65 Then "then"
#65 BoolConst "true"
#66 Else "else"
#66 BoolConst "false"
#67 Fi "fi"
#68 Else "else"
#68 BoolConst "false"
#69 Fi "fi"
#70 Rbrace "}"
#70 Semi ";"
#72 ObjectId "x_value"
#72 Lparen "("
#72 Rparen ")"
#72 Colon ":"
#72 TypeId "Int"
#72 Lbrace "{"
#73 ObjectId "x"
#74 Rbrace "}"
#74 Semi ";"
#76 ObjectId "y_value"
#76 Lparen "("
#76 Rparen ")"
#76 Colon ":"
#76 TypeId "Int"
#76 Lbrace "{"
#77 ObjectId "y"
#78 Rbrace "}"
#78 Semi ";"
#79 Rbrace "}"
#79 Semi ";"
